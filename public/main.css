@import url(https://use.typekit.net/vae5vru.css);
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

button {
  font-size: 2rem;
  text-transform: uppercase;
  font-family: "Dunbar Text", Helvetica, sans-serif;
  background-color: white;
  color: #0D3958;
  border: 2px solid #0D3958;
  margin: 10px;
  height: 5rem;
  width: 25rem;
  border-radius: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: 0.4s;
}

button.dark {
  background-color: #0D3958;
  color: white;
  border-color: white;
}

button:hover, button:focus {
  transform: scale(1.04);
  color: #2D88C4;
  border-color: #2D88C4;
}

button.dark:hover, button.dark:focus {
  color: #CBE1F0;
  border-color: #CBE1F0;
}

a {
  color: unset;
  text-decoration: unset;
}

h1 {
  font-size: 4.8rem;
  text-transform: uppercase;
}

h2 {
  font-size: 2.8rem;
  text-transform: uppercase;
}

h3 {
  font-size: 1.4rem;
  line-height: 1.8rem;
}

h4 {
  font-size: 2rem;
  font-weight: 300;
  line-height: 2.2rem;
}

h5 {
  font-size: 2rem;
  font-weight: 300;
  text-transform: uppercase;
  line-height: 2.2rem;
}

h6 {
  font-size: 1.4rem;
}

p {
  font-size: 1.4rem;
  line-height: 1.8rem;
}

.text_white {
  color: white !important;
}

.text_midblue {
  color: #2D88C4 !important;
}

.text_light {
  color: #73BFE6 !important;
}

.text_dark {
  color: #0D3958 !important;
}

.blurry {
  filter: blur(2rem);
  transform: translateX(2rem);
}

.unblur {
  animation: unblur 1.5s ease-out forwards;
}

@keyframes unblur {
  from {
    filter: blur(2rem);
    transform: translateX(50px);
  }
  to {
    filter: blur(0);
    transform: translateX(0px);
  }
}
@media (min-width: 901px) {
  .no_desktop {
    display: none;
  }
}
@media (max-width: 899px) {
  .no_mobile {
    display: none;
  }
}
div.preloader {
  z-index: 100;
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: white;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  animation: 2.9s preLoader forwards;
}
div.preloader div.preloader-wrapper {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
}
div.preloader div.preloader-wrapper p.preloader_text {
  color: #2D88C4;
}
div.preloader div.preloader-wrapper div.preloader_number {
  color: #2D88C4;
}

@keyframes preLoader {
  60% {
    opacity: 1;
  }
  99% {
    visibility: visible;
    opacity: 0;
  }
  100% {
    visibility: hidden;
    opacity: 0;
  }
}
div#form_full {
  display: none;
  transition: 0.2s;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100vw;
  height: 100vh;
  position: fixed;
  z-index: 4;
}
div#form_full .form_wrapper {
  background-size: cover;
  background-position: center;
  margin: 11vh auto;
  width: 90%;
  height: 80%;
  border: 2px solid white;
}
div#form_full .form_wrapper form {
  text-align: center;
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: space-evenly;
  margin: 2% auto;
  height: 90%;
  width: 90%;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
}
div#form_full .form_wrapper form button#close {
  position: fixed;
  top: 12vh;
  left: 2vw;
}
@media (max-width: 899px) {
  div#form_full .form_wrapper form button#close {
    top: 10vh;
    left: 1vh;
  }
}
div#form_full .form_wrapper form input, div#form_full .form_wrapper form textarea {
  padding: 1rem;
  font-family: "Dunbar Text", Helvetica, sans-serif;
  border: 2px solid #0D3958;
  width: 100%;
  max-width: 350px;
  margin-right: 1px;
}
div#form_full .form_wrapper form div > input {
  width: 29%;
  max-width: 110px;
}
div#form_full .form_wrapper form button#call {
  margin: 1rem auto;
  width: 100%;
}

nav.navigation {
  position: fixed;
  top: 0;
  z-index: 10;
  height: 10vh;
  width: 100vw;
  background-color: #CBE1F0;
}
nav.navigation .navigation_wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-around;
}
nav.navigation .navigation_wrapper a.home_link {
  height: 90%;
}
nav.navigation .navigation_wrapper a.home_link img {
  height: 100%;
}
@media (max-width: 899px) {
  nav.navigation .navigation_wrapper a.home_link {
    height: 50%;
  }
}
@media (max-width: 549px) {
  nav.navigation .navigation_wrapper {
    flex-flow: column-reverse nowrap;
  }
  nav.navigation .navigation_wrapper ul.navigation_list li.navigation_list_item {
    margin: 0 7px;
  }
}
nav.navigation ul.navigation_list {
  list-style-type: none;
  list-style: none;
}
nav.navigation ul.navigation_list li.navigation_list_item {
  margin-left: 30px;
  display: inline;
}
nav.navigation ul.navigation_list li.navigation_list_item a.navigation_list_link {
  color: #2D88C4;
  text-decoration: none;
  font-size: 1.8rem;
  font-weight: 400;
}
nav.navigation ul.navigation_list li.navigation_list_item > a:hover, nav.navigation ul.navigation_list li.navigation_list_item > a:focus {
  color: #0D3958;
}

footer {
  transform: translateY(10vh);
  height: 34rem;
  background-color: #0D3958;
}
footer .footer_wrapper {
  width: 100%;
  height: 10rem;
  display: flex;
  align-items: center;
  justify-content: space-around;
}
footer .footer_wrapper p {
  color: white;
}
footer .footer_wrapper a {
  color: #CBE1F0;
  text-decoration: none;
}
footer .footer_wrapper a:hover, footer .footer_wrapper a:focus {
  transform: scale(1.05);
}
footer .footer_wrapper img {
  max-height: 9rem;
  margin: 1rem;
}
footer .footer_wrapper img.resban {
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 1rem;
}
footer .footer_wrapper img.social_link {
  height: 6rem;
}
footer .footer_wrapper.row_1 {
  height: 14rem;
  justify-content: center !important;
  border-bottom: 1px solid white;
}

div.media_section {
  width: 100vw;
  min-height: 90vh;
  text-align: center;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  transform: translateY(10vh);
  justify-content: space-evenly;
}
div.media_section iframe {
  max-width: 98vw;
}

div.photo_gallery {
  width: 100%;
  display: flex;
  flex-flow: row nowrap;
  overflow-x: scroll;
  align-items: center;
}
div.photo_gallery img {
  height: 500px;
  width: auto;
  margin: 1rem;
}

@media (max-width: 899px) {
  div.photo_gallery img {
    height: 60vh;
  }
}
div.section {
  transform: translateY(10vh);
  z-index: 1;
  height: 100vh;
  display: flex;
  flex-flow: row nowrap;
  align-content: center;
  justify-content: space-between;
}
div.section img {
  height: 100%;
}
div.section div.image {
  height: 100%;
  width: 100%;
  background-position: center;
  background-size: cover;
}
div.section div.section_text {
  width: 100%;
  height: 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-evenly;
}
div.section div.section_text h3, div.section div.section_text h5, div.section div.section_text p {
  color: #2D88C4;
}
div.section div.section_text button, div.section div.section_text div {
  margin-left: 8%;
  max-width: 80%;
}
div.section div.section_dark {
  background-color: #0D3958;
}
div.section div.section_dark h1, div.section div.section_dark h3, div.section div.section_dark h6 {
  color: white;
}
div.section div.section_dark h2, div.section div.section_dark h4, div.section div.section_dark h5, div.section div.section_dark p {
  color: #CBE1F0;
}

div.section#section_1 {
  height: 90vh;
  padding: 3rem;
  flex-flow: row nowrap;
  align-content: flex-end;
  box-sizing: border-box;
  background-size: cover;
  background-attachment: fixed;
}
div.section#section_1 button {
  margin-left: 2%;
}
div.section#section_1 div.section_text {
  max-width: 97%;
  justify-content: space-between;
  align-items: flex-end;
  flex-flow: row nowrap;
}
div.section#section_1 div.section_text div {
  display: flex;
  flex-flow: column nowrap;
  text-align: right;
  text-shadow: -0.3rem -0.3rem 0 #0D3958, -0.6rem -0.6rem 0 #2D88C4;
}
div.section#section_1 div.section_text h1 {
  font-size: 10rem;
}
div.section#section_1 div.section_text h2 {
  font-size: 4.7rem;
}

div#why_gasco div.image {
  background-position: right;
}
div#why_gasco div.image img {
  height: 50%;
  position: relative;
  left: 0;
}
div#why_gasco div.section_text div.cta {
  text-align: center;
}
div#why_gasco div.section_text div.cta button {
  margin: 1rem auto;
}

div#section_3 div.image {
  background-position: right;
}
div#section_3 h1 {
  font-size: 4.2rem;
}

div.services div.image img {
  height: 50vh;
  width: 50%;
  padding-top: 50vh;
  padding-left: 50%;
}
div.services div.section_text {
  height: 90vh;
}
div.services div.services_list div {
  padding: 1%;
  margin-bottom: 1%;
  background-size: contain;
  background-repeat: no-repeat;
}

div.bg_blue {
  background-color: #73BFE6;
  height: 90vh;
}
div.bg_blue a {
  box-sizing: border-box;
  padding: 1rem;
  width: 100vw;
  height: 100%;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
}
div.bg_blue div#clip_container {
  clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 25% 50%, 0% 0%);
  height: 70vh;
  width: 80vw;
}
div.bg_blue div#clip_container div#home_details {
  background-size: cover;
  background-position-y: center;
  height: 100%;
  transition: 0.4s;
}
div.bg_blue div#clip_container div#home_details:hover, div.bg_blue div#clip_container div#home_details:focus {
  transform: scale(1.1);
}
div.bg_blue div.details_section_text {
  z-index: 3;
  transform: translateX(11rem);
  padding: 2%;
  max-height: 50vh;
  min-height: 25rem;
  width: 25rem;
  background-color: rgba(255, 255, 255, 0.7);
  display: flex;
  flex-flow: column nowrap;
  align-content: center;
  justify-content: space-evenly;
  text-align: center;
  border: 0.2rem solid #0D3958;
}
div.bg_blue div.details_section_text button {
  margin: 0 auto;
}

@media (max-width: 899px) {
  div.section {
    flex-flow: column nowrap;
  }

  div.section#section_1 {
    background-position: center;
    padding-bottom: 10%;
  }
  div.section#section_1 div.section_text {
    flex-flow: column nowrap;
  }
  div.section#section_1 div.section_text h1 {
    font-size: 6.4rem;
  }
  div.section#section_1 div.section_text h2 {
    font-size: 3rem;
  }

  div.services div.image {
    height: 30vh;
    background-position: center top;
  }
  div.services div.image img {
    height: 25vh;
    width: 50%;
    padding-top: 5vh;
    padding-left: 50%;
  }

  div.bg_blue {
    height: 50vh;
  }
  div.bg_blue div#clip_container {
    height: 44vh;
    width: 100%;
  }
  div.bg_blue div.details_section_text {
    transform: translateX(4rem);
  }
}
div.section.about_banner {
  background-size: cover;
  background-position: bottom;
  height: 90vh;
  align-items: flex-end;
  justify-content: space-between;
}
div.section.about_banner h2 {
  font-size: 2.8rem;
  margin: 5%;
}

div.section.team {
  text-align: center;
  flex-flow: column nowrap;
  height: fit-content;
  align-items: center;
}
div.section.team img {
  width: 100%;
  height: auto;
}
div.section.team button {
  width: 60%;
  margin: 5%;
}

div.section.maps {
  display: block;
  padding: 2%;
  text-align: center;
  background-color: #0D3958;
  height: 90vh;
  color: white;
}
div.section.maps h2 {
  transform: translateY(14vh);
}
div.section.maps .maps_wrapper {
  height: 90%;
  margin: 0 auto;
  background-color: #0D3958;
  display: flex;
  flex-flow: row nowrap;
  text-align: center;
  align-items: center;
  justify-content: space-evenly;
}
div.section.maps .maps_wrapper .map {
  transition: 0.4s;
}
div.section.maps .maps_wrapper .map h1 {
  transform: translateY(20vh);
  margin: 3%;
}
div.section.maps .maps_wrapper .map img {
  width: 25vw;
  height: 25vw;
}
div.section.maps .maps_wrapper .map:hover {
  transform: scale(1.1);
  text-shadow: -0.5rem -0.5rem 0 #2D88C4;
}
@media (max-width: 899px) {
  div.section.maps {
    max-height: 55vh;
  }
}
@media (max-width: 550px) {
  div.section.maps {
    max-height: 70vh;
  }
  div.section.maps h2 {
    transform: translateY(7vh);
  }
  div.section.maps .maps_wrapper {
    flex-flow: column nowrap;
  }
  div.section.maps .maps_wrapper h1 {
    transform: translateY(16vh);
  }
}

div.section.quote {
  align-items: center;
  justify-content: space-around;
  margin: 1%;
  height: fit-content;
  max-height: 40vh;
}
div.section.quote img {
  max-width: 25vw;
  height: auto;
}
div.section.quote div.quote_text {
  max-width: 60%;
  padding: 10px;
  border-right: 4px solid #0D3958;
}
@media (max-width: 899px) {
  div.section.quote {
    flex-flow: row wrap;
  }
}

html {
  scroll-behavior: smooth;
  width: 100vw;
  height: 100vh;
  font-size: 62.5%;
}

body {
  overflow-x: hidden;
  width: 100%;
  height: 100%;
  font-family: "Dunbar Text", Helvetica, sans-serif;
  color: #0D3958;
}

@media (max-width: 899px) {
  html {
    font-size: 52%;
  }
}
@media (max-width: 549px) {
  html {
    font-size: 40%;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,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cVpGO0FXblpFO0VBQ0U7RUFDQTtFQUNBO0FYcVpKO0FXcFpJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QVhzWk47QVdwWkk7RUFDRTtBWHNaTjtBV25aRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYcVpKO0FXcFpJO0VBQ0U7QVhzWk47O0FJYUk7RU83WkY7SUFDRTtFWG9aRjs7RVdsWkE7SUFDRTtJQUNBO0VYcVpGO0VXcFpFO0lBQ0U7RVhzWko7RVdyWkk7SUFBSztFWHdaVDtFV3ZaSTtJQUFLO0VYMFpUOztFV3RaRTtJQUNFO0lBQ0E7RVh5Wko7RVd4Wkk7SUFDRTtJQUNBO0lBQ0E7SUFDQTtFWDBaTjs7RVd0WkE7SUFDRTtFWHlaRjtFV3haRTtJQUNFO0lBQ0E7RVgwWko7RVd4WkU7SUFDRTtFWDBaSjtBQUNGO0FZMWtCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVo0a0JGO0FZM2tCRTtFQUNFO0VBQ0E7QVo2a0JKOztBWXprQkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBWjRrQkY7QVkza0JFO0VBQ0U7RUFDQTtBWjZrQko7QVkza0JFO0VBQ0U7RUFDQTtBWjZrQko7O0FZemtCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBLHlCVjlCUztFVStCVDtFQUNBO0FaNGtCRjtBWTNrQkU7RUFBSztBWjhrQlA7QVk3a0JFO0VBQ0U7RUFDQTtFQUNBLHlCVnJDTztFVXNDUDtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FaK2tCSjtBWTlrQkk7RUFDRTtBWmdsQk47QVkva0JNO0VBQ0U7RUFDQTtBWmlsQlI7QVkva0JNO0VBQ0U7RUFDQTtBWmlsQlI7QVk5a0JJO0VBQ0U7RUFDQTtBWmdsQk47QUk1Rkk7RVFsaEJKO0lBa0NJO0VaZ2xCRjtBQUNGO0FJakdJO0VRbGhCSjtJQXFDSTtFWmtsQkY7RVlqbEJFO0lBQUs7RVpvbEJQO0VZbmxCRTtJQUNFO0VacWxCSjtFWXBsQkk7SUFBSztFWnVsQlQ7QUFDRjs7QVlubEJBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWnNsQkY7QVlybEJFO0VBQ0U7RUFDQTtBWnVsQko7QVlybEJFO0VBQ0U7RUFDQTtFQUNBO0FadWxCSjtBSWhJSTtFUXBlSjtJQWdCSTtFWndsQkY7QUFDRjs7QUE1cUJBO0VBQ0k7RUFDQTtFQUNBO0VBRUE7QUE4cUJKOztBQTNxQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBLGNFbEJPO0FGZ3NCWDs7QUlwSkk7RUpuaEJBO0lBQU87RUE0cUJUO0FBQ0Y7QUkxSkk7RUo5Z0JBO0lBQU87RUE0cUJUO0FBQ0YsQyIsInNvdXJjZXMiOlsid2VicGFjazovL25wbS1ib2lsZXJwbGF0ZS8uL3N0eWxlcy9yZXNldC5zY3NzIiwid2VicGFjazovL25wbS1ib2lsZXJwbGF0ZS8uL3N0eWxlcy9pbmRleC5zY3NzIiwid2VicGFjazovL25wbS1ib2lsZXJwbGF0ZS8uL3N0eWxlcy9nbG9iYWwvdHlwb2dyYXBoeS5zY3NzIiwid2VicGFjazovL25wbS1ib2lsZXJwbGF0ZS8uL3N0eWxlcy9nbG9iYWwvdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vbnBtLWJvaWxlcnBsYXRlLy4vc3R5bGVzL2dsb2JhbC9hbmltYXRpb25zLnNjc3MiLCJ3ZWJwYWNrOi8vbnBtLWJvaWxlcnBsYXRlLy4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEvZGlzdC9faW5jbHVkZS1tZWRpYS5zY3NzIiwid2VicGFjazovL25wbS1ib2lsZXJwbGF0ZS8uL3N0eWxlcy9nbG9iYWwvaW5kZXguc2NzcyIsIndlYnBhY2s6Ly9ucG0tYm9pbGVycGxhdGUvLi9zdHlsZXMvcGFydGlhbHMvcHJlbG9hZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vbnBtLWJvaWxlcnBsYXRlLy4vc3R5bGVzL3BhcnRpYWxzL2Zvcm0uc2NzcyIsIndlYnBhY2s6Ly9ucG0tYm9pbGVycGxhdGUvLi9zdHlsZXMvcGFydGlhbHMvbmF2aWdhdGlvbi5zY3NzIiwid2VicGFjazovL25wbS1ib2lsZXJwbGF0ZS8uL3N0eWxlcy9wYXJ0aWFscy9mb290ZXIuc2NzcyIsIndlYnBhY2s6Ly9ucG0tYm9pbGVycGxhdGUvLi9zdHlsZXMvcGFnZXMvbWVkaWEuc2NzcyIsIndlYnBhY2s6Ly9ucG0tYm9pbGVycGxhdGUvLi9zdHlsZXMvcGFnZXMvaG9tZS5zY3NzIiwid2VicGFjazovL25wbS1ib2lsZXJwbGF0ZS8uL3N0eWxlcy9wYWdlcy9hYm91dC5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLCBcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblx0Ym9yZGVyOiAwO1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG5cdGRpc3BsYXk6IGJsb2NrO1xufVxuYm9keSB7XG5cdGxpbmUtaGVpZ2h0OiAxO1xufVxub2wsIHVsIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cbmJsb2NrcXVvdGUsIHEge1xuXHRxdW90ZXM6IG5vbmU7XG59XG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcblx0Y29udGVudDogJyc7XG5cdGNvbnRlbnQ6IG5vbmU7XG59XG50YWJsZSB7XG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdGJvcmRlci1zcGFjaW5nOiAwO1xufSIsIkBpbXBvcnQgJy4vcmVzZXQuc2Nzcyc7XG5AaW1wb3J0ICdodHRwczovL3VzZS50eXBla2l0Lm5ldC92YWU1dnJ1LmNzcyc7XG5AaW1wb3J0ICcuL2dsb2JhbC9pbmRleC5zY3NzJztcbkBpbXBvcnQgJy4vcGFydGlhbHMvaW5kZXguc2Nzcyc7XG5AaW1wb3J0ICcuL3BhZ2VzL2luZGV4LnNjc3MnO1xuXG5odG1sIHtcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAvL2NvbnZlcnQgcmVtIHRvIDEwcHhcbiAgICBmb250LXNpemU6IDYyLjUlO1xufVxuXG5ib2R5IHtcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGZvbnQtZmFtaWx5OiAnRHVuYmFyIFRleHQnLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gICAgY29sb3I6ICRkYXJrYmx1ZTtcbn1cblxuLy9tZWRpYSBxdWVyaWVzXG4vLyAxNzAwXG4vLyA5MDBcbkBpbmNsdWRlIG1lZGlhKCc8bWVkaXVtJykge1xuICAgIGh0bWwgeyBmb250LXNpemU6IDUyJX1cbiAgICAvL2xvZ28gc21hbGxlclxuICAgIC8vXG59XG5AaW5jbHVkZSBtZWRpYSgnPHNtYWxsJykge1xuICAgIGh0bWwgeyBmb250LXNpemU6IDQwJTsgfVxufVxuXG4iLCIvLyBCdXR0b25zXG5cbmJ1dHRvbiB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6ICdEdW5iYXIgVGV4dCcsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiAkZGFya2JsdWU7XG4gIGJvcmRlcjogMnB4IHNvbGlkICRkYXJrYmx1ZTtcbiAgbWFyZ2luOiAxMHB4O1xuICBoZWlnaHQ6IDVyZW07XG4gIHdpZHRoOiAyNXJlbTtcbiAgYm9yZGVyLXJhZGl1czogMi41cmVtO1xuICAvL2NlbnRlciB0ZXh0XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB0cmFuc2l0aW9uOiAuNHM7XG59XG5idXR0b24uZGFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRkYXJrYmx1ZTtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXItY29sb3I6IHdoaXRlO1xufVxuYnV0dG9uOmhvdmVyLCBidXR0b246Zm9jdXMge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDQpO1xuICBjb2xvcjogJG1pZGJsdWU7XG4gIGJvcmRlci1jb2xvcjogJG1pZGJsdWU7XG59XG5idXR0b24uZGFyazpob3ZlciwgYnV0dG9uLmRhcms6Zm9jdXMge1xuICBjb2xvcjogJHdoaXRlYmx1ZTtcbiAgYm9yZGVyLWNvbG9yOiAkd2hpdGVibHVlO1xufVxuXG5hIHtcbiAgY29sb3I6IHVuc2V0O1xuICB0ZXh0LWRlY29yYXRpb246IHVuc2V0O1xufVxuXG4vL1RleHRcblxuaDEge1xuICBmb250LXNpemU6IDQuOHJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbmgyIHtcbiAgZm9udC1zaXplOiAyLjhyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5oMyB7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBsaW5lLWhlaWdodDogMS44cmVtO1xufVxuaDQge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGxpbmUtaGVpZ2h0OiAyLjJyZW07XG59XG5oNSB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGluZS1oZWlnaHQ6IDIuMnJlbTtcbn1cbmg2IHtcbiAgZm9udC1zaXplOiAxLjRyZW07XG59XG5wIHtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjhyZW07XG59XG5cbi50ZXh0X3doaXRlIHtcbiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG59XG4udGV4dF9taWRibHVlIHtcbiAgY29sb3I6ICRtaWRibHVlICFpbXBvcnRhbnQ7XG59XG4udGV4dF9saWdodCB7XG4gIGNvbG9yOiAkbGlnaHRibHVlICFpbXBvcnRhbnQ7XG59XG4udGV4dF9kYXJrIHtcbiAgY29sb3I6ICRkYXJrYmx1ZSAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICBcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gIFxufVxuXG5cbi8vIEZvbnRzIGFkZGVkOlxuXG4vLyBEdW5iYXIgTG93IEJvb2tcbi8vIGZvbnQtZmFtaWx5OiBkdW5iYXItbG93LCBzYW5zLXNlcmlmO1xuLy8gZm9udC13ZWlnaHQ6IDQwMDtcbi8vIGZvbnQtc3R5bGU6IG5vcm1hbDtcblxuXG4vLyBEdW5iYXIgTG93IEJvbGRcbi8vIGZvbnQtZmFtaWx5OiBkdW5iYXItbG93LCBzYW5zLXNlcmlmO1xuLy8gZm9udC13ZWlnaHQ6IDcwMDtcbi8vIGZvbnQtc3R5bGU6IG5vcm1hbDtcblxuLy8gRHVuYmFyIExvdyBCb29rIEl0YWxpY1xuLy8gZm9udC1mYW1pbHk6IGR1bmJhci1sb3csIHNhbnMtc2VyaWY7XG4vLyBmb250LXdlaWdodDogNDAwO1xuLy8gZm9udC1zdHlsZTogaXRhbGljO1xuXG4vLyBEdW5iYXIgTG93IEJvbGQgSXRhbGljXG4vLyBmb250LWZhbWlseTogZHVuYmFyLWxvdywgc2Fucy1zZXJpZjtcbi8vIGZvbnQtd2VpZ2h0OiA3MDA7XG4vLyBmb250LXN0eWxlOiBpdGFsaWM7XG5cbi8vIER1bmJhciBUYWxsIEJvb2tcbi8vIGZvbnQtZmFtaWx5OiBkdW5iYXItdGFsbCwgc2Fucy1zZXJpZjtcbi8vIGZvbnQtd2VpZ2h0OiA0MDA7XG4vLyBmb250LXN0eWxlOiBub3JtYWw7XG5cbi8vIER1bmJhciBUYWxsIEJvbGRcbi8vIGZvbnQtZmFtaWx5OiBkdW5iYXItdGFsbCwgc2Fucy1zZXJpZjtcbi8vIGZvbnQtd2VpZ2h0OiA3MDA7XG4vLyBmb250LXN0eWxlOiBub3JtYWw7XG5cbi8vIER1bmJhciBUYWxsIEJvb2sgSXRhbGljXG4vLyBmb250LWZhbWlseTogZHVuYmFyLXRhbGwsIHNhbnMtc2VyaWY7XG4vLyBmb250LXdlaWdodDogNDAwO1xuLy8gZm9udC1zdHlsZTogaXRhbGljO1xuXG4vLyBEdW5iYXIgVGFsbCBCb2xkIEl0YWxpY1xuLy8gZm9udC1mYW1pbHk6IGR1bmJhci10YWxsLCBzYW5zLXNlcmlmO1xuLy8gZm9udC13ZWlnaHQ6IDcwMDtcbi8vIGZvbnQtc3R5bGU6IGl0YWxpYztcblxuLy8gRHVuYmFyIFRleHQgUmVndWxhclxuLy8gZm9udC1mYW1pbHk6IGR1bmJhci10ZXh0LCBzYW5zLXNlcmlmO1xuLy8gZm9udC13ZWlnaHQ6IDUwMDtcbi8vIGZvbnQtc3R5bGU6IG5vcm1hbDtcblxuLy8gRHVuYmFyIFRleHQgQm9sZFxuLy8gZm9udC1mYW1pbHk6IGR1bmJhci10ZXh0LCBzYW5zLXNlcmlmO1xuLy8gZm9udC13ZWlnaHQ6IDcwMDtcbi8vIGZvbnQtc3R5bGU6IG5vcm1hbDtcblxuLy8gRHVuYmFyIFRleHQgSXRhbGljXG4vLyBmb250LWZhbWlseTogZHVuYmFyLXRleHQsIHNhbnMtc2VyaWY7XG4vLyBmb250LXdlaWdodDogNTAwO1xuLy8gZm9udC1zdHlsZTogaXRhbGljO1xuXG4vLyBEdW5iYXIgVGV4dCBCb2xkIEl0YWxpY1xuLy8gZm9udC1mYW1pbHk6IGR1bmJhci10ZXh0LCBzYW5zLXNlcmlmO1xuLy8gZm9udC13ZWlnaHQ6IDcwMDtcbi8vIGZvbnQtc3R5bGU6IGl0YWxpYzsiLCIvLyBjb2xvcnNcbiRkYXJrYmx1ZTogIzBEMzk1ODtcbiRtaWRibHVlOiAjMkQ4OEM0O1xuJGxpZ2h0Ymx1ZTogIzczQkZFNjtcbiR3aGl0ZWJsdWU6ICNDQkUxRjA7XG4kd2hpdGU6ICNGRkZGRkY7XG4kbGlnaHRncmV5OiAjREVERURFO1xuJGdyZXk6ICM3NThBOTY7IiwiLmJsdXJyeSB7XG4gIGZpbHRlcjogYmx1cigycmVtKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDJyZW0pO1xufVxuLnVuYmx1ciB7XG4gIGFuaW1hdGlvbjogdW5ibHVyIDEuNXMgZWFzZS1vdXQgZm9yd2FyZHM7XG59XG5cbkBrZXlmcmFtZXMgdW5ibHVyIHtcbiAgZnJvbSB7XG4gICAgZmlsdGVyOiBibHVyKDJyZW0pO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg1MHB4KTtcbiAgfVxuICB0byB7IFxuICAgIGZpbHRlcjogYmx1cigwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHB4KTtcbiAgfVxufSIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8gICAgIF8gICAgICAgICAgICBfICAgICAgICAgICBfICAgICAgICAgICAgICAgICAgICAgICAgICAgXyBfXG4vLyAgICAoXykgICAgICAgICAgfCB8ICAgICAgICAgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgIHwgKF8pXG4vLyAgICAgXyBfIF9fICAgX19ffCB8XyAgIF8gIF9ffCB8IF9fXyAgIF8gX18gX19fICAgX19fICBfX3wgfF8gIF9fIF9cbi8vICAgIHwgfCAnXyBcXCAvIF9ffCB8IHwgfCB8LyBfYCB8LyBfIFxcIHwgJ18gYCBfIFxcIC8gXyBcXC8gX2AgfCB8LyBfYCB8XG4vLyAgICB8IHwgfCB8IHwgKF9ffCB8IHxffCB8IChffCB8ICBfXy8gfCB8IHwgfCB8IHwgIF9fLyAoX3wgfCB8IChffCB8XG4vLyAgICB8X3xffCB8X3xcXF9fX3xffFxcX18sX3xcXF9fLF98XFxfX198IHxffCB8X3wgfF98XFxfX198XFxfXyxffF98XFxfXyxffFxuLy9cbi8vICAgICAgU2ltcGxlLCBlbGVnYW50IGFuZCBtYWludGFpbmFibGUgbWVkaWEgcXVlcmllcyBpbiBTYXNzXG4vLyAgICAgICAgICAgICAgICAgICAgICAgIHYxLjQuOVxuLy9cbi8vICAgICAgICBodHRwczovL2VkdWFyZG9ib3VjYXMuZ2l0aHViLmlvL2luY2x1ZGUtbWVkaWFcbi8vXG4vLyAgICAgICAgIEF1dGhvcnM6IEVkdWFyZG8gQm91Y2FzIChAZWR1YXJkb2JvdWNhcylcbi8vICAgICAgICAgICAgICAgICAgS2l0dHkgR2lyYXVkZWwgKEBraXR0eWdpcmF1ZGVsKVxuLy9cbi8vICAgICAgVGhpcyBwcm9qZWN0IGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgTUlUIGxpY2Vuc2Vcbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIGxpYnJhcnkgcHVibGljIGNvbmZpZ3VyYXRpb25cbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cblxuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBnbG9iYWwgYnJlYWtwb2ludHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIGJyZWFrcG9pbnQgd2l0aCB0aGUgbGFiZWwgYHBob25lYFxuLy8vICAkYnJlYWtwb2ludHM6ICgncGhvbmUnOiAzMjBweCk7XG4vLy9cbiRicmVha3BvaW50czogKFxuICAncGhvbmUnOiAzMjBweCxcbiAgJ3RhYmxldCc6IDc2OHB4LFxuICAnZGVza3RvcCc6IDEwMjRweFxuKSAhZGVmYXVsdDtcblxuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBzdGF0aWMgZXhwcmVzc2lvbnMgb3IgbWVkaWEgdHlwZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIG1lZGlhIHR5cGUgKHNjcmVlbilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbic6ICdzY3JlZW4nKTtcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc3RhdGljIGV4cHJlc3Npb24gd2l0aCBsb2dpY2FsIGRpc2p1bmN0aW9uIChPUiBvcGVyYXRvcilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4vLy8gICAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSknXG4vLy8gICk7XG4vLy9cbiRtZWRpYS1leHByZXNzaW9uczogKFxuICAnc2NyZWVuJzogJ3NjcmVlbicsXG4gICdwcmludCc6ICdwcmludCcsXG4gICdoYW5kaGVsZCc6ICdoYW5kaGVsZCcsXG4gICdsYW5kc2NhcGUnOiAnKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpJyxcbiAgJ3BvcnRyYWl0JzogJyhvcmllbnRhdGlvbjogcG9ydHJhaXQpJyxcbiAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSksIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpJyxcbiAgJ3JldGluYTN4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpLCAobWluLXJlc29sdXRpb246IDM1MGRwaSksIChtaW4tcmVzb2x1dGlvbjogM2RwcHgpJ1xuKSAhZGVmYXVsdDtcblxuXG4vLy9cbi8vLyBEZWZpbmVzIGEgbnVtYmVyIHRvIGJlIGFkZGVkIG9yIHN1YnRyYWN0ZWQgZnJvbSBlYWNoIHVuaXQgd2hlbiBkZWNsYXJpbmcgYnJlYWtwb2ludHMgd2l0aCBleGNsdXNpdmUgaW50ZXJ2YWxzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHBpeGVscyBpcyBkZWZpbmVkIGFzIGAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MTI4cHgnKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDEyOXB4KSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBlbXMgaXMgZGVmaW5lZCBhcyBgMC4wMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIwZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIwLjAxZW0pIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHJlbXMgaXMgZGVmaW5lZCBhcyBgMC4xYCBieSBkZWZhdWx0LCB0byBiZSB1c2VkIHdpdGggYGZvbnQtc2l6ZTogNjIuNSU7YFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIuMHJlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMi4xcmVtKSB7fVxuLy8vXG4kdW5pdC1pbnRlcnZhbHM6IChcbiAgJ3B4JzogMSxcbiAgJ2VtJzogMC4wMSxcbiAgJ3JlbSc6IDAuMSxcbiAgJyc6IDBcbikgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIERlZmluZXMgd2hldGhlciBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGF2YWlsYWJsZSwgdXNlZnVsIGZvciBjcmVhdGluZyBzZXBhcmF0ZSBzdHlsZXNoZWV0c1xuLy8vIGZvciBicm93c2VycyB0aGF0IGRvbid0IHN1cHBvcnQgbWVkaWEgcXVlcmllcy5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBEaXNhYmxlcyBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIC5mb28ge1xuLy8vICAgIGNvbG9yOiB0b21hdG87XG4vLy8gIH1cbi8vL1xuJGltLW1lZGlhLXN1cHBvcnQ6IHRydWUgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIFNlbGVjdHMgd2hpY2ggYnJlYWtwb2ludCB0byBlbXVsYXRlIHdoZW4gc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllcyBpcyBkaXNhYmxlZC4gTWVkaWEgcXVlcmllcyB0aGF0IHN0YXJ0IGF0IG9yXG4vLy8gaW50ZXJjZXB0IHRoZSBicmVha3BvaW50IHdpbGwgYmUgZGlzcGxheWVkLCBhbnkgb3RoZXJzIHdpbGwgYmUgaWdub3JlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIC5mb28ge1xuLy8vICAgIGNvbG9yOiB0b21hdG87XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBkb2VzIG5vdCBpbnRlcmNlcHQgdGhlIGRlc2t0b3AgYnJlYWtwb2ludFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAndGFibGV0Jztcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49ZGVza3RvcCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogTm8gb3V0cHV0ICovXG4vLy9cbiRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCcgIWRlZmF1bHQ7XG5cbi8vL1xuLy8vIFNlbGVjdHMgd2hpY2ggbWVkaWEgZXhwcmVzc2lvbnMgYXJlIGFsbG93ZWQgaW4gYW4gZXhwcmVzc2lvbiBmb3IgaXQgdG8gYmUgdXNlZCB3aGVuIG1lZGlhIHF1ZXJpZXNcbi8vLyBhcmUgbm90IHN1cHBvcnRlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50IGFuZCBjb250YWlucyBvbmx5IGFjY2VwdGVkIG1lZGlhIGV4cHJlc3Npb25zXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAnc2NyZWVuJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAgLmZvbyB7XG4vLy8gICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIE5PVCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYnV0IGNvbnRhaW5zIGEgbWVkaWEgZXhwcmVzc2lvbiB0aGF0IGlzIG5vdCBhY2NlcHRlZFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gICRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nKTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0JywgJ3JldGluYTJ4Jykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicsICdwb3J0cmFpdCcsICdsYW5kc2NhcGUnKSAhZGVmYXVsdDtcblxuLy8vL1xuLy8vIENyb3NzLWVuZ2luZSBsb2dnaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgS2l0dHkgR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBMb2cgYSBtZXNzYWdlIGVpdGhlciB3aXRoIGBAZXJyb3JgIGlmIHN1cHBvcnRlZFxuLy8vIGVsc2Ugd2l0aCBgQHdhcm5gLCB1c2luZyBgZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJylgXG4vLy8gdG8gZGV0ZWN0IHN1cHBvcnQuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuLy8vXG5AZnVuY3Rpb24gaW0tbG9nKCRtZXNzYWdlKSB7XG4gIEBpZiBmZWF0dXJlLWV4aXN0cygnYXQtZXJyb3InKSB7XG4gICAgQGVycm9yICRtZXNzYWdlO1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiAkbWVzc2FnZTtcbiAgICAkXzogbm9vcCgpO1xuICB9XG5cbiAgQHJldHVybiAkbWVzc2FnZTtcbn1cblxuXG4vLy9cbi8vLyBXcmFwcGVyIG1peGluIGZvciB0aGUgbG9nIGZ1bmN0aW9uIHNvIGl0IGNhbiBiZSB1c2VkIHdpdGggYSBtb3JlIGZyaWVuZGx5XG4vLy8gQVBJIHRoYW4gYEBpZiBpbS1sb2coJy4uJykge31gIG9yIGAkXzogaW0tbG9nKCcuLicpYC4gQmFzaWNhbGx5LCB1c2UgdGhlIGZ1bmN0aW9uXG4vLy8gd2l0aGluIGZ1bmN0aW9ucyBiZWNhdXNlIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW4gYSBmdW5jdGlvblxuLy8vIGFuZCB1c2UgdGhlIG1peGluIGV2ZXJ5d2hlcmUgZWxzZSBiZWNhdXNlIGl0J3MgbXVjaCBtb3JlIGVsZWdhbnQuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuLy8vXG5AbWl4aW4gbG9nKCRtZXNzYWdlKSB7XG4gIEBpZiBpbS1sb2coJG1lc3NhZ2UpIHt9XG59XG5cblxuLy8vXG4vLy8gRnVuY3Rpb24gd2l0aCBubyBgQHJldHVybmAgY2FsbGVkIG5leHQgdG8gYEB3YXJuYCBpbiBTYXNzIDMuM1xuLy8vIHRvIHRyaWdnZXIgYSBjb21waWxpbmcgZXJyb3IgYW5kIHN0b3AgdGhlIHByb2Nlc3MuXG4vLy9cbkBmdW5jdGlvbiBub29wKCkge31cblxuLy8vXG4vLy8gRGV0ZXJtaW5lcyB3aGV0aGVyIGEgbGlzdCBvZiBjb25kaXRpb25zIGlzIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludC5cbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAcmV0dXJuIHtCb29sZWFufSAtIFJldHVybnMgdHJ1ZSBpZiB0aGUgY29uZGl0aW9ucyBhcmUgaW50ZXJjZXB0ZWQgYnkgdGhlIHN0YXRpYyBicmVha3BvaW50XG4vLy9cbkBmdW5jdGlvbiBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSB7XG4gICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQpO1xuXG4gIEBpZiBub3QgJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUge1xuICAgIEBpZiBpbS1sb2coJ2AjeyRpbS1uby1tZWRpYS1icmVha3BvaW50fWAgaXMgbm90IGEgdmFsaWQgYnJlYWtwb2ludC4nKSB7fVxuICB9XG5cbiAgQGVhY2ggJGNvbmRpdGlvbiBpbiAkY29uZGl0aW9ucyB7XG4gICAgQGlmIG5vdCBtYXAtaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGNvbmRpdGlvbik7XG4gICAgICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgICAgICR2YWx1ZTogZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGNvbmRpdGlvbiwgJG9wZXJhdG9yKTtcblxuICAgICAgQGlmICgkcHJlZml4ID09ICdtYXgnIGFuZCAkdmFsdWUgPD0gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpIG9yXG4gICAgICAgICAgKCRwcmVmaXggPT0gJ21pbicgYW5kICR2YWx1ZSA+ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlKSB7XG4gICAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSBAZWxzZSBpZiBub3QgaW5kZXgoJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zLCAkY29uZGl0aW9uKSB7XG4gICAgICBAcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gdHJ1ZTtcbn1cblxuLy8vL1xuLy8vIFBhcnNpbmcgZW5naW5lXG4vLy8gQGF1dGhvciBLaXR0eSBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIEdldCBvcGVyYXRvciBvZiBhbiBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3Qgb3BlcmF0b3IgZnJvbVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIEFueSBvZiBgPj1gLCBgPmAsIGA8PWAsIGA8YCwgYOKJpWAsIGDiiaRgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkZXhwcmVzc2lvbikge1xuICBAZWFjaCAkb3BlcmF0b3IgaW4gKCc+PScsICc+JywgJzw9JywgJzwnLCAn4omlJywgJ+KJpCcpIHtcbiAgICBAaWYgc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgICAgIEByZXR1cm4gJG9wZXJhdG9yO1xuICAgIH1cbiAgfVxuXG4gIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgLy8gcmVseSBvbiB0aGUgYGltLWxvZyguLilgIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHRoZSBgbG9nKC4uKWAgbWl4aW4uIEJlY2F1c2VcbiAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gIC8vIFNhc3MgMy4zLCBjaGFuZ2UgdGhpcyBsaW5lIGluIGBAaWYgaW0tbG9nKC4uKSB7fWAgaW5zdGVhZC5cbiAgJF86IGltLWxvZygnTm8gb3BlcmF0b3IgZm91bmQgaW4gYCN7JGV4cHJlc3Npb259YC4nKTtcbn1cblxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBkaW1lbnNpb24gZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgd2lkdGhgIG9yIGBoZWlnaHRgIChvciBwb3RlbnRpYWxseSBhbnl0aGluZyBlbHNlKVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwYXJzZWQtZGltZW5zaW9uOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDAsICRvcGVyYXRvci1pbmRleCAtIDEpO1xuICAkZGltZW5zaW9uOiAnd2lkdGgnO1xuXG4gIEBpZiBzdHItbGVuZ3RoKCRwYXJzZWQtZGltZW5zaW9uKSA+IDAge1xuICAgICRkaW1lbnNpb246ICRwYXJzZWQtZGltZW5zaW9uO1xuICB9XG5cbiAgQHJldHVybiAkZGltZW5zaW9uO1xufVxuXG5cbi8vL1xuLy8vIEdldCBkaW1lbnNpb24gcHJlZml4IGJhc2VkIG9uIGFuIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3Jcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgbWluYCBvciBgbWF4YFxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcikge1xuICBAcmV0dXJuIGlmKGluZGV4KCgnPCcsICc8PScsICfiiaQnKSwgJG9wZXJhdG9yKSwgJ21heCcsICdtaW4nKTtcbn1cblxuXG4vLy9cbi8vLyBHZXQgdmFsdWUgb2YgYW4gZXhwcmVzc2lvbiwgYmFzZWQgb24gYSBmb3VuZCBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IHZhbHVlIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gQSBudW1lcmljIHZhbHVlXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkdmFsdWU6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yLWluZGV4ICsgc3RyLWxlbmd0aCgkb3BlcmF0b3IpKTtcblxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkdmFsdWUpIHtcbiAgICAkdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkdmFsdWUpO1xuICB9IEBlbHNlIHtcbiAgICAkdmFsdWU6IHRvLW51bWJlcigkdmFsdWUpO1xuICB9XG5cbiAgJGludGVydmFsOiBtYXAtZ2V0KCR1bml0LWludGVydmFscywgdW5pdCgkdmFsdWUpKTtcblxuICBAaWYgbm90ICRpbnRlcnZhbCB7XG4gICAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAgIC8vIHJlbHkgb24gdGhlIGBpbS1sb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gICAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gICAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGltLWxvZyguLikge31gIGluc3RlYWQuXG4gICAgJF86IGltLWxvZygnVW5rbm93biB1bml0IGAje3VuaXQoJHZhbHVlKX1gLicpO1xuICB9XG5cbiAgQGlmICRvcGVyYXRvciA9PSAnPicge1xuICAgICR2YWx1ZTogJHZhbHVlICsgJGludGVydmFsO1xuICB9IEBlbHNlIGlmICRvcGVyYXRvciA9PSAnPCcge1xuICAgICR2YWx1ZTogJHZhbHVlIC0gJGludGVydmFsO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWU7XG59XG5cblxuLy8vXG4vLy8gUGFyc2UgYW4gZXhwcmVzc2lvbiB0byByZXR1cm4gYSB2YWxpZCBtZWRpYS1xdWVyeSBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIHBhcnNlXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gVmFsaWQgbWVkaWEgcXVlcnlcbi8vL1xuQGZ1bmN0aW9uIHBhcnNlLWV4cHJlc3Npb24oJGV4cHJlc3Npb24pIHtcbiAgLy8gSWYgaXQgaXMgcGFydCBvZiAkbWVkaWEtZXhwcmVzc2lvbnMsIGl0IGhhcyBubyBvcGVyYXRvclxuICAvLyB0aGVuIHRoZXJlIGlzIG5vIG5lZWQgdG8gZ28gYW55IGZ1cnRoZXIsIGp1c3QgcmV0dXJuIHRoZSB2YWx1ZVxuICBAaWYgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbikge1xuICAgIEByZXR1cm4gbWFwLWdldCgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKTtcbiAgfVxuXG4gICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pO1xuICAkZGltZW5zaW9uOiBnZXQtZXhwcmVzc2lvbi1kaW1lbnNpb24oJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuXG4gIEByZXR1cm4gJygjeyRwcmVmaXh9LSN7JGRpbWVuc2lvbn06ICN7JHZhbHVlfSknO1xufVxuXG4vLy9cbi8vLyBTbGljZSBgJGxpc3RgIGJldHdlZW4gYCRzdGFydGAgYW5kIGAkZW5kYCBpbmRleGVzXG4vLy9cbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJGxpc3QgLSBMaXN0IHRvIHNsaWNlXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRzdGFydCBbMV0gLSBTdGFydCBpbmRleFxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkZW5kIFtsZW5ndGgoJGxpc3QpXSAtIEVuZCBpbmRleFxuLy8vXG4vLy8gQHJldHVybiB7TGlzdH0gU2xpY2VkIGxpc3Rcbi8vL1xuQGZ1bmN0aW9uIHNsaWNlKCRsaXN0LCAkc3RhcnQ6IDEsICRlbmQ6IGxlbmd0aCgkbGlzdCkpIHtcbiAgQGlmIGxlbmd0aCgkbGlzdCkgPCAxIG9yICRzdGFydCA+ICRlbmQge1xuICAgIEByZXR1cm4gKCk7XG4gIH1cblxuICAkcmVzdWx0OiAoKTtcblxuICBAZm9yICRpIGZyb20gJHN0YXJ0IHRocm91Z2ggJGVuZCB7XG4gICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIG50aCgkbGlzdCwgJGkpKTtcbiAgfVxuXG4gIEByZXR1cm4gJHJlc3VsdDtcbn1cblxuLy8vL1xuLy8vIFN0cmluZyB0byBudW1iZXIgY29udmVydGVyXG4vLy8gQGF1dGhvciBLaXR0eSBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIENhc3RzIGEgc3RyaW5nIGludG8gYSBudW1iZXJcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgTnVtYmVyfSAkdmFsdWUgLSBWYWx1ZSB0byBiZSBwYXJzZWRcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn1cbi8vL1xuQGZ1bmN0aW9uIHRvLW51bWJlcigkdmFsdWUpIHtcbiAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSAnbnVtYmVyJyB7XG4gICAgQHJldHVybiAkdmFsdWU7XG4gIH0gQGVsc2UgaWYgdHlwZS1vZigkdmFsdWUpICE9ICdzdHJpbmcnIHtcbiAgICAkXzogaW0tbG9nKCdWYWx1ZSBmb3IgYHRvLW51bWJlcmAgc2hvdWxkIGJlIGEgbnVtYmVyIG9yIGEgc3RyaW5nLicpO1xuICB9XG5cbiAgJGZpcnN0LWNoYXJhY3Rlcjogc3RyLXNsaWNlKCR2YWx1ZSwgMSwgMSk7XG4gICRyZXN1bHQ6IDA7XG4gICRkaWdpdHM6IDA7XG4gICRtaW51czogKCRmaXJzdC1jaGFyYWN0ZXIgPT0gJy0nKTtcbiAgJG51bWJlcnM6ICgnMCc6IDAsICcxJzogMSwgJzInOiAyLCAnMyc6IDMsICc0JzogNCwgJzUnOiA1LCAnNic6IDYsICc3JzogNywgJzgnOiA4LCAnOSc6IDkpO1xuXG4gIC8vIFJlbW92ZSArLy0gc2lnbiBpZiBwcmVzZW50IGF0IGZpcnN0IGNoYXJhY3RlclxuICBAaWYgKCRmaXJzdC1jaGFyYWN0ZXIgPT0gJysnIG9yICRmaXJzdC1jaGFyYWN0ZXIgPT0gJy0nKSB7XG4gICAgJHZhbHVlOiBzdHItc2xpY2UoJHZhbHVlLCAyKTtcbiAgfVxuXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggc3RyLWxlbmd0aCgkdmFsdWUpIHtcbiAgICAkY2hhcmFjdGVyOiBzdHItc2xpY2UoJHZhbHVlLCAkaSwgJGkpO1xuXG4gICAgQGlmIG5vdCAoaW5kZXgobWFwLWtleXMoJG51bWJlcnMpLCAkY2hhcmFjdGVyKSBvciAkY2hhcmFjdGVyID09ICcuJykge1xuICAgICAgQHJldHVybiB0by1sZW5ndGgoaWYoJG1pbnVzLCAtJHJlc3VsdCwgJHJlc3VsdCksIHN0ci1zbGljZSgkdmFsdWUsICRpKSlcbiAgICB9XG5cbiAgICBAaWYgJGNoYXJhY3RlciA9PSAnLicge1xuICAgICAgJGRpZ2l0czogMTtcbiAgICB9IEBlbHNlIGlmICRkaWdpdHMgPT0gMCB7XG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICogMTAgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRkaWdpdHM6ICRkaWdpdHMgKiAxMDtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKSAvICRkaWdpdHM7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiBpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KTtcbn1cblxuXG4vLy9cbi8vLyBBZGQgYCR1bml0YCB0byBgJHZhbHVlYFxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGFkZCB1bml0IHRvXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICR1bml0IC0gU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB1bml0XG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gYCR2YWx1ZWAgZXhwcmVzc2VkIGluIGAkdW5pdGBcbi8vL1xuQGZ1bmN0aW9uIHRvLWxlbmd0aCgkdmFsdWUsICR1bml0KSB7XG4gICR1bml0czogKCdweCc6IDFweCwgJ2NtJzogMWNtLCAnbW0nOiAxbW0sICclJzogMSUsICdjaCc6IDFjaCwgJ3BjJzogMXBjLCAnaW4nOiAxaW4sICdlbSc6IDFlbSwgJ3JlbSc6IDFyZW0sICdwdCc6IDFwdCwgJ2V4JzogMWV4LCAndncnOiAxdncsICd2aCc6IDF2aCwgJ3ZtaW4nOiAxdm1pbiwgJ3ZtYXgnOiAxdm1heCk7XG5cbiAgQGlmIG5vdCBpbmRleChtYXAta2V5cygkdW5pdHMpLCAkdW5pdCkge1xuICAgICRfOiBpbS1sb2coJ0ludmFsaWQgdW5pdCBgI3skdW5pdH1gLicpO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWUgKiBtYXAtZ2V0KCR1bml0cywgJHVuaXQpO1xufVxuXG4vLy9cbi8vLyBUaGlzIG1peGluIGFpbXMgYXQgcmVkZWZpbmluZyB0aGUgY29uZmlndXJhdGlvbiBqdXN0IGZvciB0aGUgc2NvcGUgb2Zcbi8vLyB0aGUgY2FsbC4gSXQgaXMgaGVscGZ1bCB3aGVuIGhhdmluZyBhIGNvbXBvbmVudCBuZWVkaW5nIGFuIGV4dGVuZGVkXG4vLy8gY29uZmlndXJhdGlvbiBzdWNoIGFzIGN1c3RvbSBicmVha3BvaW50cyAocmVmZXJyZWQgdG8gYXMgdHdlYWtwb2ludHMpXG4vLy8gZm9yIGluc3RhbmNlLlxuLy8vXG4vLy8gQGF1dGhvciBLaXR0eSBHaXJhdWRlbFxuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICR0d2Vha3BvaW50cyBbKCldIC0gTWFwIG9mIHR3ZWFrcG9pbnRzIHRvIGJlIG1lcmdlZCB3aXRoIGAkYnJlYWtwb2ludHNgXG4vLy8gQHBhcmFtIHtNYXB9ICR0d2Vhay1tZWRpYS1leHByZXNzaW9ucyBbKCldIC0gTWFwIG9mIHR3ZWFrZWQgbWVkaWEgZXhwcmVzc2lvbnMgdG8gYmUgbWVyZ2VkIHdpdGggYCRtZWRpYS1leHByZXNzaW9uYFxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCB0aGUgZ2xvYmFsIGJyZWFrcG9pbnRzIHdpdGggYSB0d2Vha3BvaW50XG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoKCdjdXN0b20nOiA2NzhweCkpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgbWVkaWEgZXhwcmVzc2lvbnMgd2l0aCBhIGN1c3RvbSBvbmVcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnM6ICgnYWxsJzogJ2FsbCcpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnYWxsJywgJz5waG9uZScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgYm90aCBjb25maWd1cmF0aW9uIG1hcHNcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSwgKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJywgJzw9Y3VzdG9tJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG5AbWl4aW4gbWVkaWEtY29udGV4dCgkdHdlYWtwb2ludHM6ICgpLCAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnM6ICgpKSB7XG4gIC8vIFNhdmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGdsb2JhbC1icmVha3BvaW50czogJGJyZWFrcG9pbnRzO1xuICAkZ2xvYmFsLW1lZGlhLWV4cHJlc3Npb25zOiAkbWVkaWEtZXhwcmVzc2lvbnM7XG5cbiAgLy8gVXBkYXRlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRicmVha3BvaW50czogbWFwLW1lcmdlKCRicmVha3BvaW50cywgJHR3ZWFrcG9pbnRzKSAhZ2xvYmFsO1xuICAkbWVkaWEtZXhwcmVzc2lvbnM6IG1hcC1tZXJnZSgkbWVkaWEtZXhwcmVzc2lvbnMsICR0d2Vhay1tZWRpYS1leHByZXNzaW9ucykgIWdsb2JhbDtcblxuICBAY29udGVudDtcblxuICAvLyBSZXN0b3JlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRicmVha3BvaW50czogJGdsb2JhbC1icmVha3BvaW50cyAhZ2xvYmFsO1xuICAkbWVkaWEtZXhwcmVzc2lvbnM6ICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnMgIWdsb2JhbDtcbn1cblxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgcHVibGljIGV4cG9zZWQgQVBJXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5cblxuLy8vXG4vLy8gR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gYSBsaXN0IG9mIGNvbmRpdGlvbnNcbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHNpbmdsZSBzZXQgYnJlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCB0d28gc2V0IGJyZWFrcG9pbnRzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD10YWJsZXQnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGN1c3RvbSB2YWx1ZXNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzU4cHgnLCAnPDg1MHB4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBzZXQgYnJlYWtwb2ludHMgd2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+ZGVza3RvcCcsICc8PTEzNTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzdGF0aWMgZXhwcmVzc2lvblxuLy8vICBAaW5jbHVkZSBtZWRpYSgncmV0aW5hMngnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBNaXhpbmcgZXZlcnl0aGluZ1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj0zNTBweCcsICc8dGFibGV0JywgJ3JldGluYTN4JykgeyB9XG4vLy9cbkBtaXhpbiBtZWRpYSgkY29uZGl0aW9ucy4uLikge1xuICBAaWYgKCRpbS1tZWRpYS1zdXBwb3J0IGFuZCBsZW5ndGgoJGNvbmRpdGlvbnMpID09IDApIG9yXG4gICAgICAobm90ICRpbS1tZWRpYS1zdXBwb3J0IGFuZCBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSkge1xuICAgIEBjb250ZW50O1xuICB9IEBlbHNlIGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGVuZ3RoKCRjb25kaXRpb25zKSA+IDApIHtcbiAgICBAbWVkaWEgI3t1bnF1b3RlKHBhcnNlLWV4cHJlc3Npb24obnRoKCRjb25kaXRpb25zLCAxKSkpfSB7XG4gICAgICAvLyBSZWN1cnNpdmUgY2FsbFxuICAgICAgQGluY2x1ZGUgbWVkaWEoc2xpY2UoJGNvbmRpdGlvbnMsIDIpLi4uKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiQGltcG9ydCAnYnJlYWtwb2ludHMuc2Nzcyc7XG5AaW1wb3J0ICd2YXJpYWJsZXMuc2Nzcyc7XG5AaW1wb3J0ICd0eXBvZ3JhcGh5LnNjc3MnO1xuQGltcG9ydCAnYW5pbWF0aW9ucy5zY3NzJztcblxuXG5AaW5jbHVkZSBtZWRpYSgnPm1lZGl1bScpIHtcbiAgICAubm9fZGVza3RvcCB7IGRpc3BsYXk6IG5vbmU7IH1cbn1cblxuQGluY2x1ZGUgbWVkaWEoJzxtZWRpdW0nKSB7XG4gIC5ub19tb2JpbGUgeyBkaXNwbGF5Om5vbmU7IH1cbn1cblxuXG5cbiIsImRpdi5wcmVsb2FkZXIge1xuICB6LWluZGV4OiAxMDA7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFuaW1hdGlvbjogMi45cyBwcmVMb2FkZXIgZm9yd2FyZHM7XG4gIGRpdi5wcmVsb2FkZXItd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBwLnByZWxvYWRlcl90ZXh0IHtcbiAgICAgIGNvbG9yOiRtaWRibHVlO1xuICAgIH07XG4gICAgZGl2LnByZWxvYWRlcl9udW1iZXIge1xuICAgICAgY29sb3I6ICRtaWRibHVlO1xuICAgIH07XG4gIH1cbn1cblxuQGtleWZyYW1lcyBwcmVMb2FkZXIge1xuICAwJSB7fVxuICA2MCUge1xuICAgIG9wYWNpdHk6IDE7fVxuICA5OSUge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgb3BhY2l0eTogMDt9XG4gIDEwMCUge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBvcGFjaXR5OiAwO31cbn1cbiIsImRpdiNmb3JtX2Z1bGwge1xuICBkaXNwbGF5OiBub25lO1xuICB0cmFuc2l0aW9uOiAuMnM7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjUpO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogNDtcbiAgLmZvcm1fd3JhcHBlciB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAxMXZoIGF1dG87XG4gICAgd2lkdGg6IDkwJTtcbiAgICBoZWlnaHQ6IDgwJTtcbiAgICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZTtcbiAgICBmb3JtIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgICAgbWFyZ2luOiAyJSBhdXRvO1xuICAgICAgaGVpZ2h0OiA5MCU7XG4gICAgICB3aWR0aDogOTAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuNSk7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBidXR0b24jY2xvc2Uge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHRvcDogMTJ2aDtcbiAgICAgICAgbGVmdDogMnZ3O1xuICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPG1lZGl1bScpIHtcbiAgICAgICAgICB0b3A6IDEwdmg7XG4gICAgICAgICAgbGVmdDogMXZoO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpbnB1dCwgdGV4dGFyZWEge1xuICAgICAgICBwYWRkaW5nOiAxcmVtO1xuICAgICAgICBmb250LWZhbWlseTogJ0R1bmJhciBUZXh0JywgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAkZGFya2JsdWU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXgtd2lkdGg6IDM1MHB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDFweDtcbiAgICAgIH1cbiAgICAgIGRpdj5pbnB1dCB7XG4gICAgICAgIHdpZHRoOiAyOSU7XG4gICAgICAgIG1heC13aWR0aDogMTEwcHg7XG4gICAgICB9XG4gICAgICBidXR0b24jY2FsbCB7XG4gICAgICAgIG1hcmdpbjogMXJlbSBhdXRvO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiAgIiwibmF2Lm5hdmlnYXRpb24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTA7XG4gIGhlaWdodDogMTB2aDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGVibHVlO1xuXG4gIC5uYXZpZ2F0aW9uX3dyYXBwZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgYS5ob21lX2xpbmsge1xuICAgICAgaGVpZ2h0OiA5MCU7XG4gICAgICBpbWcgeyBoZWlnaHQ6IDEwMCU7fVxuICAgIH1cbiAgICBAaW5jbHVkZSBtZWRpYSgnPG1lZGl1bScpIHtcbiAgICAgIGEuaG9tZV9saW5rIHtcbiAgICAgICAgaGVpZ2h0OiA1MCU7XG4gICAgICB9XG4gICAgfVxuICAgIEBpbmNsdWRlIG1lZGlhKCc8c21hbGwnKSB7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbi1yZXZlcnNlIG5vd3JhcDtcbiAgICAgIHVsLm5hdmlnYXRpb25fbGlzdCBsaS5uYXZpZ2F0aW9uX2xpc3RfaXRlbSB7XG4gICAgICAgIG1hcmdpbjogMCA3cHg7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIFxuICB1bC5uYXZpZ2F0aW9uX2xpc3Qge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgbGkubmF2aWdhdGlvbl9saXN0X2l0ZW0ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gIFxuICAgICAgYS5uYXZpZ2F0aW9uX2xpc3RfbGluayB7XG4gICAgICAgIGNvbG9yOiAkbWlkYmx1ZTtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgIH1cbiAgICB9XG4gICAgbGkubmF2aWdhdGlvbl9saXN0X2l0ZW0+YTpob3ZlciwgbGkubmF2aWdhdGlvbl9saXN0X2l0ZW0+YTpmb2N1cyB7XG4gICAgICBjb2xvcjogJGRhcmtibHVlO1xuICAgIH1cbiAgfVxufVxuXG5cblxuXG4iLCJmb290ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTB2aCk7XG4gIGhlaWdodDogMzRyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICRkYXJrYmx1ZTtcbiAgLmZvb3Rlcl93cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwcmVtO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICBwIHtjb2xvcjogd2hpdGU7fVxuICAgIGEge2NvbG9yOiAkd2hpdGVibHVlOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7fVxuICAgIGE6aG92ZXIsIGE6Zm9jdXMge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgICB9XG4gICAgaW1nIHsgXG4gICAgICBtYXgtaGVpZ2h0OiA5cmVtO1xuICAgICAgbWFyZ2luOiAxcmVtO1xuICAgIH1cbiAgICBpbWcucmVzYmFuIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjgpO1xuICAgICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgICB9XG4gICAgaW1nLnNvY2lhbF9saW5rIHtcbiAgICAgIGhlaWdodDogNnJlbTtcbiAgICB9XG4gIH1cbi5mb290ZXJfd3JhcHBlci5yb3dfMSB7XG4gIGhlaWdodDogMTRyZW07XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZTtcbn1cbn1cbiIsImRpdi5tZWRpYV9zZWN0aW9uIHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBtaW4taGVpZ2h0OiA5MHZoO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwdmgpO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcblxuICBpZnJhbWUge1xuICAgIG1heC13aWR0aDogOTh2dztcbiAgfVxufVxuXG5kaXYucGhvdG9fZ2FsbGVyeSB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIG92ZXJmbG93LXg6IHNjcm9sbDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaW1nIHtcbiAgICBoZWlnaHQ6IDUwMHB4O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1hcmdpbjogMXJlbTtcbiAgfVxufVxuXG5AaW5jbHVkZSBtZWRpYSgnPG1lZGl1bScpIHtcbiAgZGl2LnBob3RvX2dhbGxlcnkge1xuICAgIGltZyB7XG4gICAgICBoZWlnaHQ6IDYwdmg7XG4gICAgfVxuICB9XG59XG5cbiIsIlxuZGl2LnNlY3Rpb24ge1xudHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwdmgpO1xuei1pbmRleDogMTtcbmhlaWdodDogMTAwdmg7XG5kaXNwbGF5OiBmbGV4O1xuZmxleC1mbG93OiByb3cgbm93cmFwO1xuYWxpZ24tY29udGVudDogY2VudGVyO1xuanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuaW1nIHsgaGVpZ2h0OiAxMDAlOyB9XG5kaXYuaW1hZ2Uge1xuaGVpZ2h0OiAxMDAlO1xud2lkdGg6IDEwMCU7XG5iYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG5iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuZGl2LnNlY3Rpb25fdGV4dCB7XG53aWR0aDogMTAwJTtcbmhlaWdodDogMTAwJTtcbmRpc3BsYXk6IGZsZXg7XG5mbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG5qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbmgzLGg1LHAge1xuICBjb2xvcjogJG1pZGJsdWU7XG59XG5idXR0b24sZGl2IHtcbiAgbWFyZ2luLWxlZnQ6IDglO1xuICBtYXgtd2lkdGg6IDgwJTtcbn1cbn1cbmRpdi5zZWN0aW9uX2Rhcmsge1xuaDEsaDMsaDYgeyBjb2xvcjogd2hpdGU7fVxuaDIsaDQsaDUscCB7IGNvbG9yOiAkd2hpdGVibHVlO31cbmJhY2tncm91bmQtY29sb3I6ICRkYXJrYmx1ZTtcbn1cbn1cbmRpdi5zZWN0aW9uI3NlY3Rpb25fMSB7XG4gIGhlaWdodDogOTB2aDtcbiAgcGFkZGluZzogM3JlbTtcbiAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgYnV0dG9uIHsgbWFyZ2luLWxlZnQ6IDIlO31cbiAgZGl2LnNlY3Rpb25fdGV4dCB7XG4gICAgbWF4LXdpZHRoOiA5NyU7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgZGl2IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7IFxuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICB0ZXh0LXNoYWRvdzogLS4zcmVtIC0uM3JlbSAwICRkYXJrYmx1ZSwgLS42cmVtIC0uNnJlbSAwICRtaWRibHVlO1xuICAgICAgfVxuICAgIGgxIHsgZm9udC1zaXplOiAxMHJlbTt9XG4gICAgaDIgeyBmb250LXNpemU6IDQuN3JlbTt9XG4gIH1cbn1cbmRpdiN3aHlfZ2FzY28ge1xuICBkaXYuaW1hZ2Uge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0O1xuICAgIGltZyB7XG4gICAgICBoZWlnaHQ6IDUwJTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgXG4gICAgICBsZWZ0OiAwO1xuICAgIH19XG4gIGRpdi5zZWN0aW9uX3RleHQgZGl2LmN0YSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJ1dHRvbiB7IG1hcmdpbjogMXJlbSBhdXRvO319XG59XG5kaXYjc2VjdGlvbl8zIHtcbiAgZGl2LmltYWdlIHsgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0OyB9XG4gIGgxIHsgZm9udC1zaXplOiA0LjJyZW07IH1cbn1cbmRpdi5zZXJ2aWNlcyB7XG4gIGRpdi5pbWFnZSB7IFxuICAgIGltZyB7IFxuICAgICAgaGVpZ2h0OiA1MHZoO1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIHBhZGRpbmctdG9wOiA1MHZoO1xuICAgICAgcGFkZGluZy1sZWZ0OiA1MCU7XG4gICAgfX1cbiAgZGl2LnNlY3Rpb25fdGV4dCB7XG4gICAgaGVpZ2h0OiA5MHZoO1xuICB9XG4gIGRpdi5zZXJ2aWNlc19saXN0IHtcbiAgICBkaXYge1xuICAgICAgcGFkZGluZzogMSU7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxJTtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgfVxuICB9XG59XG5kaXYuYmdfYmx1ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRsaWdodGJsdWU7XG4gIGhlaWdodDogOTB2aDtcbiAgYSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDFyZW07XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG4gIGRpdiNjbGlwX2NvbnRhaW5lciB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDc1JSAwJSwgMTAwJSA1MCUsIDc1JSAxMDAlLCAwJSAxMDAlLCAyNSUgNTAlLCAwJSAwJSk7XG4gICAgaGVpZ2h0OiA3MHZoO1xuICAgIHdpZHRoOiA4MHZ3O1xuICAgIGRpdiNob21lX2RldGFpbHMge1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb24teTogY2VudGVyO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgdHJhbnNpdGlvbjogLjRzO1xuICAgIH1cbiAgICBkaXYjaG9tZV9kZXRhaWxzOmhvdmVyLCBkaXYjaG9tZV9kZXRhaWxzOmZvY3VzIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICB9XG4gIH1cbiAgZGl2LmRldGFpbHNfc2VjdGlvbl90ZXh0IHtcbiAgICB6LWluZGV4OiAzO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMXJlbSk7XG4gICAgcGFkZGluZzogMiU7XG4gICAgbWF4LWhlaWdodDogNTB2aDtcbiAgICBtaW4taGVpZ2h0OiAyNXJlbTtcbiAgICB3aWR0aDogMjVyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuNyk7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXI6IC4ycmVtIHNvbGlkICRkYXJrYmx1ZTtcbiAgICBidXR0b24ge1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuICB9XG59XG5cbkBpbmNsdWRlIG1lZGlhKCc8bWVkaXVtJykge1xuICBkaXYuc2VjdGlvbiB7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICB9XG4gIGRpdi5zZWN0aW9uI3NlY3Rpb25fMSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMCU7XG4gICAgZGl2LnNlY3Rpb25fdGV4dCB7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgICBoMSB7IGZvbnQtc2l6ZTogNi40cmVtOyB9XG4gICAgICBoMiB7IGZvbnQtc2l6ZTogM3JlbTsgfVxuICAgIH1cbiAgfVxuICBkaXYuc2VydmljZXMge1xuICAgIGRpdi5pbWFnZSB7IFxuICAgICAgaGVpZ2h0OiAzMHZoO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgICAgIGltZyB7IFxuICAgICAgICBoZWlnaHQ6IDI1dmg7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIHBhZGRpbmctdG9wOiA1dmg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogNTAlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBkaXYuYmdfYmx1ZSB7XG4gICAgaGVpZ2h0OiA1MHZoO1xuICAgIGRpdiNjbGlwX2NvbnRhaW5lciB7XG4gICAgICBoZWlnaHQ6IDQ0dmg7XG4gICAgICB3aWR0aDoxMDAlO1xuICAgIH1cbiAgICBkaXYuZGV0YWlsc19zZWN0aW9uX3RleHQge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDRyZW0pO1xuICAgIH1cbiAgfVxufVxuXG5cblxuXG4iLCJkaXYuc2VjdGlvbi5hYm91dF9iYW5uZXIge1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b207XG4gIGhlaWdodDogOTB2aDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGgyIHtcbiAgICBmb250LXNpemU6IDIuOHJlbTtcbiAgICBtYXJnaW46IDUlO1xuICB9XG59XG5cbmRpdi5zZWN0aW9uLnRlYW0ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cbiAgYnV0dG9uIHtcbiAgICB3aWR0aDogNjAlO1xuICAgIG1hcmdpbjogNSU7XG4gIH1cbn1cblxuZGl2LnNlY3Rpb24ubWFwcyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAyJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFya2JsdWU7XG4gIGhlaWdodDogOTB2aDtcbiAgY29sb3I6IHdoaXRlO1xuICBoMiB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxNHZoKTt9XG4gIC5tYXBzX3dyYXBwZXIge1xuICAgIGhlaWdodDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRkYXJrYmx1ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICAubWFwIHtcbiAgICAgIHRyYW5zaXRpb246IC40cztcbiAgICAgIGgxIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwdmgpO1xuICAgICAgICBtYXJnaW46IDMlO1xuICAgICAgfVxuICAgICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IDI1dnc7XG4gICAgICAgIGhlaWdodDogMjV2dztcbiAgICAgIH1cbiAgICB9XG4gICAgLm1hcDpob3ZlciB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgICB0ZXh0LXNoYWRvdzogLS41cmVtIC0uNXJlbSAwICRtaWRibHVlO1xuICAgIH1cbiAgfVxuICBAaW5jbHVkZSBtZWRpYSgnPG1lZGl1bScpIHtcbiAgICBtYXgtaGVpZ2h0OiA1NXZoOyBcbiAgfVxuICBAaW5jbHVkZSBtZWRpYSgnPD1zbWFsbCcpIHtcbiAgICBtYXgtaGVpZ2h0OiA3MHZoO1xuICAgIGgyIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDd2aCk7fSBcbiAgICAubWFwc193cmFwcGVyIHtcbiAgICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgICAgIGgxIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDE2dmgpO31cbiAgICB9XG4gIH1cbn1cblxuZGl2LnNlY3Rpb24ucXVvdGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgbWFyZ2luOiAxJTtcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgbWF4LWhlaWdodDogNDB2aDtcbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDI1dnc7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG4gIGRpdi5xdW90ZV90ZXh0IHtcbiAgICBtYXgtd2lkdGg6IDYwJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlci1yaWdodDogNHB4IHNvbGlkICRkYXJrYmx1ZTtcbiAgfVxuICBAaW5jbHVkZSBtZWRpYSgnPG1lZGl1bScpIHtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=*/