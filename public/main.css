@import url(https://use.typekit.net/vae5vru.css);
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

button {
  font-size: 2rem;
  text-transform: uppercase;
  font-family: "Dunbar Text", Helvetica, sans-serif;
  background-color: white;
  color: #0D3958;
  border: 2px solid #0D3958;
  margin: 10px;
  height: 5rem;
  width: 25rem;
  border-radius: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: 0.4s;
}

button.dark {
  background-color: #0D3958;
  color: white;
  border-color: white;
}

button:hover, button:focus {
  transform: scale(1.04);
  color: #2D88C4;
  border-color: #2D88C4;
}

button.dark:hover, button.dark:focus {
  color: #CBE1F0;
  border-color: #CBE1F0;
}

a {
  color: unset;
  text-decoration: unset;
}

h1 {
  font-size: 4.8rem;
  text-transform: uppercase;
}

h2 {
  font-size: 2.8rem;
  text-transform: uppercase;
}

h3 {
  font-size: 1.4rem;
  line-height: 1.8rem;
}

h4 {
  font-size: 2rem;
  font-weight: 300;
  line-height: 2.2rem;
}

h5 {
  font-size: 2rem;
  font-weight: 300;
  text-transform: uppercase;
  line-height: 2.2rem;
}

h6 {
  font-size: 1.4rem;
}

p {
  font-size: 1.4rem;
  line-height: 1.8rem;
}

.text_white {
  color: white !important;
}

.text_midblue {
  color: #2D88C4 !important;
}

.text_light {
  color: #73BFE6 !important;
}

.text_dark {
  color: #0D3958 !important;
}

.blurry {
  filter: blur(2rem);
  transform: translateX(2rem);
}

.unblur {
  animation: unblur 1.5s ease-out forwards;
}

@keyframes unblur {
  from {
    filter: blur(2rem);
    transform: translateX(50px);
  }
  to {
    filter: blur(0);
    transform: translateX(0px);
  }
}
@media (min-width: 901px) {
  .no_desktop {
    display: none;
  }
}
@media (max-width: 899px) {
  .no_mobile {
    display: none;
  }
}
div.preloader {
  z-index: 100;
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: white;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  animation: 2.9s preLoader forwards;
}
div.preloader div.preloader-wrapper {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
}
div.preloader div.preloader-wrapper p.preloader_text {
  color: #2D88C4;
}
div.preloader div.preloader-wrapper div.preloader_number {
  color: #2D88C4;
}

@keyframes preLoader {
  60% {
    opacity: 1;
  }
  99% {
    visibility: visible;
    opacity: 0;
  }
  100% {
    visibility: hidden;
    opacity: 0;
  }
}
div#form_full {
  display: none;
  transition: 0.2s;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100vw;
  height: 100vh;
  position: fixed;
  z-index: 4;
}
div#form_full .form_wrapper {
  background-size: cover;
  background-position: center;
  margin: 11vh auto;
  width: 90%;
  height: 80%;
  border: 2px solid white;
}
div#form_full .form_wrapper form {
  text-align: center;
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: space-evenly;
  margin: 2% auto;
  height: 90%;
  width: 90%;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
}
div#form_full .form_wrapper form button#close {
  position: fixed;
  top: 12vh;
  left: 2vw;
}
@media (max-width: 899px) {
  div#form_full .form_wrapper form button#close {
    top: 10vh;
    left: 1vh;
  }
}
div#form_full .form_wrapper form input, div#form_full .form_wrapper form textarea {
  padding: 1rem;
  font-family: "Dunbar Text", Helvetica, sans-serif;
  border: 2px solid #0D3958;
  width: 100%;
  max-width: 350px;
  margin-right: 1px;
}
div#form_full .form_wrapper form div > input {
  width: 29%;
  max-width: 110px;
}
div#form_full .form_wrapper form button#call {
  margin: 1rem auto;
  width: 100%;
}

nav.navigation {
  position: fixed;
  top: 0;
  z-index: 10;
  height: 10vh;
  width: 100vw;
  background-color: #CBE1F0;
}
nav.navigation .navigation_wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-around;
}
nav.navigation .navigation_wrapper a.home_link {
  height: 90%;
}
nav.navigation .navigation_wrapper a.home_link img {
  height: 100%;
}
@media (max-width: 899px) {
  nav.navigation .navigation_wrapper a.home_link {
    height: 50%;
  }
}
@media (max-width: 549px) {
  nav.navigation .navigation_wrapper {
    flex-flow: column-reverse nowrap;
  }
  nav.navigation .navigation_wrapper ul.navigation_list li.navigation_list_item {
    margin: 0 7px;
  }
}
nav.navigation ul.navigation_list {
  list-style-type: none;
  list-style: none;
}
nav.navigation ul.navigation_list li.navigation_list_item {
  margin-left: 30px;
  display: inline;
}
nav.navigation ul.navigation_list li.navigation_list_item a.navigation_list_link {
  color: #2D88C4;
  text-decoration: none;
  font-size: 1.8rem;
  font-weight: 400;
}
nav.navigation ul.navigation_list li.navigation_list_item > a:hover, nav.navigation ul.navigation_list li.navigation_list_item > a:focus {
  color: #0D3958;
}

footer {
  transform: translateY(10vh);
  height: 24rem;
  background-color: #0D3958;
}
footer .footer_wrapper {
  width: 100%;
  height: 10rem;
  display: flex;
  align-items: center;
  justify-content: space-around;
}
footer .footer_wrapper p {
  color: white;
}
footer .footer_wrapper a {
  color: #CBE1F0;
  text-decoration: none;
}
footer .footer_wrapper a:hover, footer .footer_wrapper a:focus {
  transform: scale(1.05);
}
footer .footer_wrapper img {
  max-height: 9rem;
  margin: 1rem;
}
footer .footer_wrapper img.resban {
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 1rem;
}
footer .footer_wrapper img.social_link {
  height: 6rem;
}
footer .footer_wrapper.row_1 {
  height: 14rem;
  justify-content: center !important;
  border-bottom: 1px solid white;
}

div.media_section {
  width: 100vw;
  min-height: 90vh;
  text-align: center;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  transform: translateY(10vh);
  justify-content: space-evenly;
}

div.photo_gallery {
  width: 100%;
  display: flex;
  flex-flow: row nowrap;
  overflow-x: scroll;
  align-items: center;
}
div.photo_gallery img {
  height: 500px;
  width: auto;
  margin: 1rem;
}

@media (max-width: 899px) {
  div.photo_gallery img {
    height: 60vh;
  }
}
div.section {
  transform: translateY(10vh);
  z-index: 1;
  height: 100vh;
  display: flex;
  flex-flow: row nowrap;
  align-content: center;
  justify-content: space-between;
}
div.section img {
  height: 100%;
}
div.section div.image {
  height: 100%;
  width: 100%;
  background-position: center;
  background-size: cover;
}
div.section div.section_text {
  width: 100%;
  height: 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-evenly;
}
div.section div.section_text h3, div.section div.section_text h5, div.section div.section_text p {
  color: #2D88C4;
}
div.section div.section_text button, div.section div.section_text div {
  margin-left: 8%;
  max-width: 80%;
}
div.section div.section_dark {
  background-color: #0D3958;
}
div.section div.section_dark h1, div.section div.section_dark h3, div.section div.section_dark h6 {
  color: white;
}
div.section div.section_dark h2, div.section div.section_dark h4, div.section div.section_dark h5, div.section div.section_dark p {
  color: #CBE1F0;
}

div.section#section_1 {
  height: 90vh;
  padding: 3rem;
  flex-flow: row nowrap;
  align-content: flex-end;
  box-sizing: border-box;
  background-size: cover;
  background-attachment: fixed;
}
div.section#section_1 button {
  margin-left: 2%;
}
div.section#section_1 div.section_text {
  max-width: 97%;
  justify-content: space-between;
  align-items: flex-end;
  flex-flow: row nowrap;
}
div.section#section_1 div.section_text div {
  display: flex;
  flex-flow: column nowrap;
  text-align: right;
  text-shadow: -0.3rem -0.3rem 0 #0D3958, -0.6rem -0.6rem 0 #2D88C4;
}
div.section#section_1 div.section_text h1 {
  font-size: 10rem;
}
div.section#section_1 div.section_text h2 {
  font-size: 4.7rem;
}

div#why_gasco div.image {
  background-position: right;
}
div#why_gasco div.image img {
  height: 50%;
  position: relative;
  left: 0;
}
div#why_gasco div.section_text div.cta {
  text-align: center;
}
div#why_gasco div.section_text div.cta button {
  margin: 1rem auto;
}

div#section_3 div.image {
  background-position: right;
}
div#section_3 h1 {
  font-size: 4.2rem;
}

div.services div.image img {
  height: 50vh;
  width: 50%;
  padding-top: 50vh;
  padding-left: 50%;
}
div.services div.section_text {
  height: 90vh;
}
div.services div.services_list div {
  padding: 1%;
  margin-bottom: 1%;
  background-size: contain;
  background-repeat: no-repeat;
}

div.bg_blue {
  background-color: #73BFE6;
  height: 90vh;
}
div.bg_blue a {
  box-sizing: border-box;
  padding: 1rem;
  width: 100vw;
  height: 100%;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
}
div.bg_blue div#clip_container {
  clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 25% 50%, 0% 0%);
  height: 70vh;
  width: 80vw;
}
div.bg_blue div#clip_container div#home_details {
  background-size: cover;
  background-position-y: center;
  height: 100%;
  transition: 0.4s;
}
div.bg_blue div#clip_container div#home_details:hover, div.bg_blue div#clip_container div#home_details:focus {
  transform: scale(1.1);
}
div.bg_blue div.details_section_text {
  z-index: 3;
  transform: translateX(11rem);
  padding: 2%;
  max-height: 50vh;
  min-height: 25rem;
  width: 25rem;
  background-color: rgba(255, 255, 255, 0.7);
  display: flex;
  flex-flow: column nowrap;
  align-content: center;
  justify-content: space-evenly;
  text-align: center;
  border: 0.2rem solid #0D3958;
}
div.bg_blue div.details_section_text button {
  margin: 0 auto;
}

@media (max-width: 899px) {
  div.section {
    flex-flow: column nowrap;
  }

  div.section#section_1 {
    background-position: center;
    padding-bottom: 10%;
  }
  div.section#section_1 div.section_text {
    flex-flow: column nowrap;
  }
  div.section#section_1 div.section_text h1 {
    font-size: 6.4rem;
  }
  div.section#section_1 div.section_text h2 {
    font-size: 3rem;
  }

  div.services div.image {
    height: 30vh;
    background-position: center top;
  }
  div.services div.image img {
    height: 25vh;
    width: 50%;
    padding-top: 5vh;
    padding-left: 50%;
  }

  div.bg_blue {
    height: 50vh;
  }
  div.bg_blue div#clip_container {
    height: 44vh;
    width: 100%;
  }
  div.bg_blue div.details_section_text {
    transform: translateX(4rem);
  }
}
div.section.about_banner {
  background-size: cover;
  background-position: bottom;
  height: 90vh;
  align-items: flex-end;
  justify-content: space-between;
}
div.section.about_banner h2 {
  font-size: 2.8rem;
  margin: 5%;
}

div.section.video div.video_wrapper {
  background-color: black;
  margin: auto;
  height: 70vh;
  aspect-ratio: 16/9;
}

div.section.team {
  text-align: center;
  flex-flow: column nowrap;
  height: fit-content;
  align-items: center;
}
div.section.team img {
  width: 100%;
  height: auto;
}
div.section.team button {
  width: 60%;
  margin: 5%;
}

div.section.maps {
  display: block;
  padding: 2%;
  text-align: center;
  background-color: #0D3958;
  height: 90vh;
  color: white;
}
div.section.maps h2 {
  transform: translateY(14vh);
}
div.section.maps .maps_wrapper {
  height: 90%;
  margin: 0 auto;
  background-color: #0D3958;
  display: flex;
  flex-flow: row nowrap;
  text-align: center;
  align-items: center;
  justify-content: space-evenly;
}
div.section.maps .maps_wrapper .map {
  transition: 0.4s;
}
div.section.maps .maps_wrapper .map h1 {
  transform: translateY(20vh);
  margin: 3%;
}
div.section.maps .maps_wrapper .map img {
  width: 25vw;
  height: 25vw;
}
div.section.maps .maps_wrapper .map:hover {
  transform: scale(1.1);
}
@media (max-width: 899px) {
  div.section.maps {
    max-height: 55vh;
  }
}
@media (max-width: 550px) {
  div.section.maps {
    max-height: 70vh;
  }
  div.section.maps h2 {
    transform: translateY(7vh);
  }
  div.section.maps .maps_wrapper {
    flex-flow: column nowrap;
  }
  div.section.maps .maps_wrapper h1 {
    transform: translateY(16vh);
  }
}

div.section.quote {
  align-items: center;
  justify-content: space-around;
  margin: 1%;
  height: fit-content;
  max-height: 40vh;
}
div.section.quote img {
  max-width: 25vw;
  height: auto;
}
div.section.quote div.quote_text {
  max-width: 60%;
  padding: 10px;
  border-right: 4px solid #0D3958;
}
@media (max-width: 899px) {
  div.section.quote {
    flex-flow: row wrap;
  }
}

html {
  scroll-behavior: smooth;
  width: 100vw;
  height: 100vh;
  font-size: 62.5%;
}

body {
  overflow-x: hidden;
  width: 100%;
  height: 100%;
  font-family: "Dunbar Text", Helvetica, sans-serif;
  color: #0D3958;
}

@media (max-width: 899px) {
  html {
    font-size: 52%;
  }
}
@media (max-width: 549px) {
  html {
    font-size: 40%;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/